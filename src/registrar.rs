//! # D-Bus interface proxy for: `com.canonical.AppMenu.Registrar`
//!
//! This code was generated by `zbus-xmlgen` `4.1.0` from D-Bus introspection data.
//! Source: `com.canonical.AppMenu.Registrar.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(interface = "com.canonical.AppMenu.Registrar", assume_defaults = true)]
trait Registrar {
    /// GetMenuForWindow method
    fn get_menu_for_window(
        &self,
        windowId: u32,
    ) -> zbus::Result<(String, zbus::zvariant::OwnedObjectPath)>;

    /// RegisterWindow method
    fn register_window(
        &self,
        windowId: u32,
        menuObjectPath: &zbus::zvariant::ObjectPath<'_>,
    ) -> zbus::Result<()>;

    /// UnregisterWindow method
    fn unregister_window(&self, windowId: u32) -> zbus::Result<()>;
}
